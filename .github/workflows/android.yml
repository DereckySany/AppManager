name: Build App Manager

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
          java-version: 17
          distribution: temurin
      
    - name: Install required packages
      run: |
        sudo apt-get update
        sudo apt-get install -y gradle texlive pandoc tree
        
    # - name: Grant execute permission for gradlew
    #   run: chmod +x gradlew
        
    # - name: Install bundletool on Linux
    #   run: |
    #     wget 'https://github.com/google/bundletool/releases/download/1.15.6/bundletool-all-1.15.6.jar'
    #     mv bundletool-all-1.15.6.jar bundletool-all.jar
    
    - name: Get app version
      run: echo "APP_VERSION=v$(cat ./app/build.gradle | grep -m1 versionName | awk -F \" '{print $2}')" >> $GITHUB_ENV
      
    - name: Get app name
      run: echo "APP_NAME=AppManager_${{ env.APP_VERSION }}-DEBUG#${{ github.run_number }}" >> $GITHUB_ENV
      
    - name: Inject run number
      run: sed -i -e 's|versionName "\([0-9\.]\+\)"|versionName "\1-${{ github.run_number }}"|' ./app/build.gradle
        
    - name: Install bundletool on Linux
      run: |
        # Baixa a última versão do bundletool
         LATEST_BUNDLETOOL_VERSION=$(curl -s https://api.github.com/repos/google/bundletool/releases/latest | grep 'tag_name' | cut -d '"' -f 4)
         wget "https://github.com/google/bundletool/releases/download/$LATEST_BUNDLETOOL_VERSION/bundletool-all-$LATEST_BUNDLETOOL_VERSION.jar"
         mv "bundletool-all-$LATEST_BUNDLETOOL_VERSION.jar" bundletool-all.jar

    - name: Configure bundletool on path
      run: |
        echo "java -jar $(realpath bundletool-all.jar)" > bundletool
        chmod +x bundletool
        sudo mv bundletool /usr/bin

    # - name: Clone repository with submodules
    #   run: git clone --recurse-submodules https://github.com/MuntashirAkon/AppManager.git
    # cd AppManager
       
    - name: Build debug version of App Manager
      run: |
        ./gradlew packageDebugUniversalApk
        find -name *.apk
      
    # # cd app/build
    # - name: Create Bundled App (APKS format)
    #   run: |
    #     chmod +x ./scripts/aab_to_apks.sh
    #     ./scripts/aab_to_apks.sh debug
    #     find -name *.aab

    - name: Rename the APK file
      run: mv ./app/build/outputs/apk_from_bundle/debug/app-debug-universal.apk ./${{ env.APP_NAME }}.apk
        
    - name: Upload generated APK file
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APP_NAME }}
        path: ./${{ env.APP_NAME }}.apk
